Just read this, and comprehend it. Do not respond yet.

Im writing an elastic integration, trying to hit my mock-api at http://host.docker.internal:8000/items.
Im spinning up my elastic stack with `elastic-package stack up -d`, and then manually adding this integration to an agent.

=== project structure ===

connector
├── changelog.yml
├── data_stream
│   └── items
│       ├── agent
│       │   └── stream
│       │       └── stream.yml.hbs
│       ├── elasticsearch
│       │   └── ingest_pipeline
│       │       └── default.yml
│       ├── fields
│       │   ├── base-fields.yml
│       │   └── fields.yml
│       └── manifest.yml
├── docs
│   └── README.md
└── manifest.yml

=== root level manifest ===

format_version: 3.0.0
name: connector
title: "Item Connector"
version: 0.1.0
description: "Fetches items from an external API and ingests into Elasticsearch."
type: integration
owner:
  github: zackm
  type: community
categories: ["custom", "security"]

policy_templates:
  - name: connector
    title: Connector
    description: Fetches item data from an external API and ingests it into Elastic.
    inputs:
      - type: httpjson
        title: "Fetch Items"
        description: "Fetches item data from the /items endpoint on your API."

=== data stream manifest ===

type: logs
title: Items
streams:
  - input: httpjson
    template_path: httpjson.yml.hbs
    title: Fetch Items from API
    description: Ingests item records from your external API.

=== httpjson.yml.hbs ===

config_version: 2

interval: 10s

request.method: GET
request.url: http://host.docker.internal:8000/items

== default.yml ===

---
description: Ingest pipeline for items
processors:
  - set:
      field: event.dataset
      value: connector.items
  - set:
      field: "@timestamp"
      value: "{{_ingest.timestamp}}"
  - set:
      field: ecs.version
      value: "8.0.0"
  - set:
      field: message
      value: "nothing important"
  - set: 
      field: input.type
      value: httpjson

=== fields.yml ===

- name: id
  type: float
  description: Unique ID of the item.

- name: name
  type: keyword
  description: Name of the item.

- name: category
  type: keyword
  description: Category of the item.

- name: data_stream.type
  type: constant_keyword
  description: Data stream type.

- name: data_stream.dataset
  type: constant_keyword
  description: Data stream dataset.

- name: data_stream.namespace
  type: constant_keyword
  description: Data stream namespace.

- name: ecs.version
  type: keyword
  description: ECS version the event conforms to.

- name: message
  type: text
  description: Original message of the event.

- name: "@timestamp"
  type: date
  description: Event timestamp.

- name: input.type
  type: keyword
  description: The type of data we are ingesting

=== Mock Api ===

from fastapi import FastAPI
from pydantic import BaseModel
import random
import uvicorn

app = FastAPI()

hit = 0

@app.get("/items")
def read_items():
    global hit
    
    names = "gary bob sharron jim sylvie shelly zack scott margaret tim bailey".split(' ')
    categories = "person place thing".split(' ')

    num_to_add = random.randint(0, 10)

    items = []

    for i in range(hit, hit+num_to_add):
        items.append({ 'id':i, 'name':names[i % len(names)], 'category':categories[i % len(categories)] })

    hit += num_to_add

    return items
